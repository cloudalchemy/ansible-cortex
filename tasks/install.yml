---
- name: Create the cortex group
  group:
    name: "{{ cortex_system_group }}"
    state: present
    system: true

- name: Create the cortex user
  user:
    name: "{{ cortex_system_user }}"
    groups: "{{ cortex_system_group }}"
    append: true
    shell: /usr/sbin/nologin
    system: true
    createhome: false
    home: /

- name: create cortex data directory
  file:
    path: "{{ cortex_db_dir }}"
    state: directory
    owner: "{{ cortex_system_user }}"
    group: "{{ cortex_system_group }}"
    mode: 0755


- name: create cortex configuration directories
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ cortex_system_user }}"
    group: "{{ cortex_system_group }}"
    mode: 0770
  with_items:
    - "{{ cortex_config_dir }}"
    - "{{ cortex_config_dir }}/rules"

- block:
    - name: download cortex binary and install it
      become: false
      get_url:
        url: "https://github.com/cortexproject/cortex/releases/download/v{{ cortex_version  }}/cortex-linux-amd64"
        dest: "/tmp/cortex-linux-amd64"
        checksum: "sha256:{{ __cortex_checksum }}"
      register: _download_archive
      until: _download_archive is succeeded
      retries: 5
      delay: 2
      delegate_to: localhost
      check_mode: false

    - name: propagate official cortex
      copy:
        src: "/tmp/cortex-linux-amd64"
        dest: "{{ _cortex_binary_install_dir }}/cortex-linux-amd64"
        mode: 0755
        owner: root
        group: root
      notify: restart cortex

  when:
    - cortex_binary_local_dir | length == 0
    - not cortex_skip_install

- name: propagate locally distributed cortex
  copy:
    src: "{{ cortex_binary_local_dir }}/cortex-linux-amd64"
    dest: "{{ _cortex_binary_install_dir }}/cortex-linux-amd64"
    mode: 0755
    owner: root
    group: root
  when:
    - cortex_binary_local_dir | length > 0
    - not cortex_skip_install

- name: create systemd service unit
  template:
    src: cortex.service.j2
    dest: /etc/systemd/system/cortex.service
    owner: root
    group: root
    mode: 0644
  notify:
    - restart cortex

- name: Install SELinux dependencies
  package:
    name: "{{ item }}"
    state: present
  with_items: "{{ cortex_selinux_packages }}"
  register: _install_packages
  until: _install_packages is succeeded
  retries: 5
  delay: 2
  when:
    - ansible_version.full is version('2.4', '>=')
    - ansible_selinux.status == "enabled"

- name: Allow cortex to bind to port in SELinux
  seport:
    ports: "{{ cortex_web_listen_address.split(':')[1] }}"
    proto: tcp
    setype: http_port_t
    state: present
  when:
    - ansible_version.full is version('2.4', '>=')
    - ansible_selinux.status == "enabled"
